#include <bits/stdc++.h>
#define IOS                  \
	ios::sync_with_stdio(0); \
	cin.tie(0);              \
	cout.tie(0);
#define endl "\n"
#define ll long long int 
#define pb push_back
#define ii pair<int,int>
#define vi vector<int>
#define vl vector<ll>
#define vii vector<ii>
#define pq priority_queue<int,vi,greater<int> >
using namespace std;
vector<int> arr[100001];
int vis[100001];
int rs[100001];
std::stack<int> s;
bool dfs(int node)
{
  vis[node]=1;
  s.push(node);
  rs[node]=1;
  for(int child : arr[node])
  {
      if(!vis[child])
      {
          if(dfs(child)==true) return true;
      }
      if(rs[child])
      {
          s.push(child);
          return true;
      }
  }
  s.pop();
  rs[node]=0;
  return false;
}
int main()
{
   IOS;
   int vertices,edges,u,v;
   cin>>vertices>>edges;
   while(edges--)
   {
       cin>>u>>v;
       arr[u].pb(v);
   }
   bool f=false;
   for(int i=1;i<=vertices;i++)
   {
       if(!vis[i])
       {
          f=dfs(i);
          if(f==true)
          break;
       }
   }
   if(!f) cout<<"No cycle is present"<<endl;
   else
   {
       vi ans;
       int curr=s.top();
       while(!s.empty())
       {
            ans.pb(s.top());
            s.pop();
            if(ans.back() == curr && ans.size() != 1)
			break;
        }
      reverse(ans.begin(),ans.end());
       cout<<ans.size()<<endl;
       for(int x : ans)
       cout<<x<<" ";
   }
}
